"NOTE: THIS LIST MAY BE INCOMPLETE! IF YOU NOTICE MISSING ENTRIES OR MISTAKES, PLEASE CONTACT ME AT BENJAMIN.PAASSEN@DFKI.DE ! NOTE: EXPERIMENTAL METADATA LISTED IN NEXT SLIDE",,,,,,,,,,,,,,,,,,,,,,,,,,
Name,Nickname,Language,graph representation,represents words as character sets (bitwise),filters anagrams,words indexed by contained characters,uses character frequency,pruning character sets that were already tried,recursive,parallelized,Knuth's Algorithm X,Approach/Tricks,lines of code (including comments),Source Code URL,tweet/form of announcement,timestamp of announcement [CEST],github version timestamp for evaluation [CEST],hyperfine mean time [ms],hyperfine std [ms],hyperfine min [ms],hyperfine max[ms],Median execution time [ms],Execution time trial 1 [s],Execution time trial 2 [s],Execution time trial 3 [s],
Matt Parker,standupmaths,Python,0,0,1,0,0,0,0,0,0,"anagram filtering; building pairs of words, then merging pairs; used reported execution time by Matt",110,https://github.com/standupmaths/fiveletterworda,https://twitter.com/AProblemSquared/status/1548948689229594624,2022-07-18 10:32,2022-08-03 22:11,"too long, not executed",,,,"2,760,670,300","2,760,670",,,Just for reference! I did not actually run this implementation. This is the number released by Matt Parker himself.
Benjamin Paassen,bpaassen,Python,1,0,0,0,0,0,0,0,0,graph representation; pruning symmetric pairs; no anagram filtering!,133,https://gitlab.com/bpaassen/five_clique,https://twitter.com/bpaassen1/status/1549326759505559558,2022-07-19 11:34,2022-07-19 16:59,"too long, not executed",,,,"1,338,000",1.34E+03,,,
Neil Coffey,neilcoffey,Java,0,1,1,0,0,0,0,0,0,representation of words via bitwise sets of letters; separate handling between loops 1/2 and 3/4/5,207,https://github.com/neilcoffey/FunStuff/tree/main/WordleFiveWordFinder,https://twitter.com/BitterCoffey/status/1553297093334388736,2022-07-30 10:31,2022-07-29 17:44,"15,336",588,"14,793","16,668","15,026",1.50E+01,1.50E+01,1.50E+01,
Phire,phire,Python,1,1,1,0,0,1,0,0,0,graph representation + more pruning (starting from bpaassen's solution),154,https://github.com/phire/five_clique,https://twitter.com/phirenz/status/1555072727534694400,2022-08-04 08:06,2022-08-04 13:28,"15,527",214,"15,300","16,030","16,714",1.57E+01,1.73E+01,1.67E+01,
David van den Berg,Azuzl,Python,0,1,0,1,1,1,0,0,0,iterative implementation that goes over the alphabet once and keeps a list of candidates to which this character could be added (or the character could be skipped); binary representation of words and indexing tricks,173,https://github.com/Azuzl/parker-word-square,https://twitter.com/4z4i/status/1555138929640226817,2022-08-04 12:29,2022-08-04 11:05,"2,735",324,"2,278","3,179","2,136",2.39E+00,2.14E+00,2.12E+00,
Sylvester Hesp,oisyn,C++,0,1,1,1,1,0,1,0,0,representation of words via bitwise sets of letters; an index to quickly find words which contain a certain letter; start with words which contain infrequent letters and work to frequent letters,178,https://github.com/oisyn/parkerwords,https://twitter.com/oisyn/status/1555152956097437696,2022-08-04 13:25,2022-08-04 13:22,"51,223",752,"49,458","52,057","52,836",5.28E+01,5.27E+01,5.34E+01,
IlyaNikolaevsky,IlyaNikolaevsky,C++,0,1,1,0,0,0,1,0,0,representation of words via bitwise sets of letters; recursion; dynamic programming,99,https://github.com/ilyanikolaevsky/five_words,https://twitter.com/IlyaNikolaevsky/status/1555262027752407041,2022-08-04 20:38,2022-08-04 20:04,"6,104",45,"6,041","6,180","5,860",5.85E+00,5.88E+00,5.86E+00,
Gé Weijers,gweijers,C,0,1,1,0,0,0,1,0,1,Donald Knuth's Algorithm X for the set cover problem,511,https://github.com/gweijers/wordle_cover,reconstructed from github,2022-08-04 20:57,2022-08-04 08:57,"2,467",18,"2,449","2,502","2,580",2.51E+00,2.58E+00,2.60E+00,
Kristin Paget,KristinPaget,C,0,1,1,0,0,0,0,1,0,parallelization,299,https://github.com/kristinpaget/fivewords,https://twitter.com/KristinPaget/status/1555281153455624192,2022-08-04 21:54,2022-08-04 21:50,"1,042",23,"1,022","1,091","1,045",1.03E+00,1.07E+00,1.05E+00,
Bryan Redd,ae6nr,Python,0,0,1,0,1,1,0,0,0,"backtracking perspective; add characters, starting from the most infrequent one",222,https://github.com/ae6nr/25letters,reconstructed from github,2022-08-04 23:13,2022-08-04 23:13,"38,242",984,"36,245","39,311","37,226",3.75E+01,3.72E+01,3.67E+01,
Tomáš Pavlík,savlik,Python,1,1,1,1,1,0,0,0,0,"Fork of graph solution, incorporating several further optimizations, in particular bitwise representation, character fequency, and indexing",92,https://github.com/Savlik/six_clique,https://twitter.com/Savlik5/status/1555340245247434752,2022-08-05 1:49,2022-08-05 9:44,5348,168,5090,5624,"4,884",4.69E+00,4.88E+00,5.08E+00,
Pablo Yaggi,pyaggi,C++,1,1,1,0,0,1,0,1,0,graph representation; representation of words via bitwise sets of letters; parallelization,412,https://github.com/pyaggi/WordStats,reconstructed from github,2022-08-05 02:27,2022-08-04 22:26,"247,705","3,227","239,244","250,680","242,974",2.37E+02,2.45E+02,2.43E+02,
Orson Peters,orlp,Rust,1,1,0,0,0,1,0,0,0,"no description, but appears to use graph representation, bit representation, and pruning",112,https://github.com/orlp/matt-parker-five-letter-clique,reconstructed from github,2022-08-05 03:01,2022-08-05 02:57,437,11,426,465,477,4.77E-01,4.54E-01,4.77E-01,
Alex Recuenco,recuenco_alex,Python,1,1,1,0,0,1,1,0,0,fork from phire with recursion,167,https://github.com/alexrecuenco/five_clique,https://twitter.com/recuenco_alex/status/1555391372596719616,2022-08-05 05:12,2022-08-05 05:04,"13,839",71,"13,737","13,924","14,350",1.55E+01,1.43E+01,1.44E+01,
Jacob,encody,Rust,1,1,1,1,0,1,0,0,0,representation of words via bitwise sets of letters; directed graph representation; shortest path index; prunning character sets that were already tried,446,https://github.com/encody/jotto-problem,https://twitter.com/sudo_build/status/1555564934515138560,2022-08-05 16:37,2022-08-06 09:31,"1,035",12,"1,015","1,056",998,9.70E-01,1.00E+01,9.98E-01,
Richard Ebeling,He3lixxx,C++,0,1,1,0,0,0,1,1,0,graph representation; recursion; multithreading,147,https://github.com/He3lixxx/five-words-five-letters,email,2022-08-05 22:13,2022-08-06 14:02,866,8,861,889,930,9.30E-01,9.25E-01,9.30E-01,
Sylvester Hesp,oisyn,C++,0,1,1,1,1,0,1,0,0,representation of words via bitwise sets of letters; an index to quickly find words which contain a certain letter; start with words which contain infrequent letters and work to frequent letters,178,https://github.com/oisyn/parkerwords,https://twitter.com/oisyn/status/1555723685557944321,2022-08-06 03:13,2022-08-06 15:32,57,2,55,70,70,6.90E-02,9.10E-02,7.00E-02,
David A. Dalrymple,daviddad,Rust,0,1,1,0,0,1,1,0,1,Donald Knuth's Algorithm X for the set cover problem,395,https://github.com/davidad/five-letters,https://twitter.com/davidad/status/1555770747473301506,2022-08-06 06:20,2022-08-06 02:22,658,5,653,670,740,7.40E-01,7.36E-01,7.43E-01,
Diggory Blake,Diggsey,Rust,1,0,1,0,0,0,1,0,0,directed graph representation; representation of words as bitwise character sets; parralelization of outer loop,118,https://github.com/Diggsey/five_words/tree/master,reconstructed from github,2022-08-06 20:48,2022-08-06 20:28,709,5,703,717,755,7.55E-01,7.45E-01,7.67E-01,
Phillip Alday,palday,Julia,1,1,1,0,0,0,0,0,0,no description; appears to use graph representation and potentially some further tricks,447,https://github.com/palday/FiveLetterWorda.jl,reconstructed from github,2022-08-07 03:28,2022-08-07 03:28,"40,956","1,150","39,251","42,727","38,730",7.71E+01,3.87E+01,3.87E+01,
Stefan Pochmann,pochmann,Python,0,0,1,0,1,0,1,0,0,no description; appears to be recursive and makes massive use of builtin python functions for speedup; very short solution,18,https://replit.com/@pochmann/5words538?v=1,https://twitter.com/StefanP08342519/status/1556203368917393410,2022-08-07 11:17,2022-08-07 11:17,"3,868",30,"3,807","3,909","3,652",3.64E+00,3.65E+00,3.91E+00,
Nathan Baulch,NathanBaulch,Go,1,1,1,0,1,0,0,1,0,no description; but appears to use parallelization and the graph representation,231,https://gist.github.com/NathanBaulch/cc26755dc89685fa209bf958e484c60d,reconstructed from github,2022-08-07 15:30,2022-08-07 15:30,"3,922",59,"3,855","4,047","3,918",3.89E+00,3.92E+00,3.92E+00,
Leonardo Taglialegne,miniBill,Rust,0,1,1,1,1,0,1,0,0,description appears to be a copy of oisyn,133,https://github.com/miniBill/parkerrust,https://twitter.com/miniBill/status/1556279304182448132,2022-08-07 16:01,2022-08-07 17:45,24,1,22,28,28,2.60E-02,2.80E-02,3.80E-02,
David Malone,dwmal1,C,0,1,0,0,0,0,1,0,0,represents words as character sets (bitwise); recursive solution;,135,https://maths.tcd.ie/~dwmalone/5word.c,https://twitter.com/dwmal1/status/1556747072170246145,2022-08-08 22:59,2022-08-08 22:59,"176,953","2,941","172,500","179,376","182,477",1.87E+02,1.82E+02,1.82E+02,
Sylvester Hesp,oisyn,C++,0,1,1,1,1,0,1,1,0,refinement of prior solution with AVX2 and hardware stuff,278,https://github.com/oisyn/parkerwords/tree/sse,https://twitter.com/oisyn/status/1556423303480451073,2022-08-08 1:33,2022-08-08 18:59,17,3,14,31,16,1.50E-02,1.60E-02,1.60E-02,
Neil Coffey,neilcoffey,Java,0,1,1,0,1,0,0,1,0,parallelized version of the prior implementation,253,https://github.com/neilcoffey/FunStuff/tree/main/WordleFiveWordFinder,https://twitter.com/BitterCoffey/status/1557056684715130881,2022-08-09 19:30,2022-08-08 19:25,813.8,24.3,781.6,862.5,786,7.90E-01,7.79E-01,7.86E-01,
Fred,fredoverflow,Java,1,1,1,0,0,0,0,0,0,nicely visualized version with bitwise representation and graph structure; nice trick with a skip counter to keep track how many words do not need to be considered in the word list,185,https://gist.github.com/fredoverflow/e3e0b5be677fd44500071356faabcf27,https://www.youtube.com/watch?v=GTsP8ss5gjk,2022-08-10 0:00,2022-08-09 20:12,4907,827,4096,6286,"4,605",4.61E+00,4.88E+00,4.52E+00,
(intentionally blank),jojo2357,Javascript,1,0,1,0,1,0,1,0,0,flexible javascript version which can change the word size and word count,362,https://github.com/jojo2357/five-clique/tree/node.js,email,2022-10-19 3:14,2022-08-10 5:51,2344,60,2279,2433,"2,385",2.31E+00,2.39E+00,2.69E+00,
Utkarsh Gupta,utkarshgupta137,Python,0,0,1,1,1,0,1,0,0,recursive python implementation which explicitly skips through one character,96,https://github.com/utkarshgupta137/fiveletterworda,email,2022-10-21 1:05,2022-08-16 16:45,14758,409,14361,15542,"13,898",1.38E+01,1.39E+01,1.40E+01,
Stew Forster,stew675,C,0,1,1,1,1,0,1,1,0,"incidentally, an almost copy of oisyn's solution, but developed in parallel; three variants are offered, here I evaluated only the fastest one, v25",704,https://github.com/stew675/standup5x5/,email,2022-08-14 15:50,2022-08-18 22:16,3.1,0.7,2.5,7,5,6.00E-03,5.00E-03,3.00E-03,
Landon Kryger,GuiltyBystander,C++,0,1,1,1,1,0,1,0,0,"I arrived at my algorithm independent of everyone but it's shocking how similar the others appear to be. I think the biggest difference in my code is that I sort the incoming words into buckets based on lowest bit AND highest few bits.  This way, when I loop to pick the next word, I can filter out huge chunks of the list at once.",233,https://github.com/GuiltyBystander/5words,email,2022-08-22 16:00,2022-08-22 15:12,16.9,2,14.9,22.8,23,1.70E-02,2.30E-02,3.30E-02,
Fred,fredoverflow,Go,1,1,1,0,1,0,0,1,0,parallelized update in Go of the previous submission; note: I used the version with words_alpha.txt to be fair,306,https://github.com/fredoverflow/wordle/blob/master/wordle.go,email,2022-10-17 10:42,2022-08-27 15:11,74.2,3.5,68.1,85.4,85,8.50E-02,7.90E-02,9.90E-02,
Leonardo Taglialegne,miniBill,Rust,0,1,1,1,1,0,1,0,0,see above,196,https://github.com/miniBill/parkerrust,https://twitter.com/miniBill/status/1562209509900275712,2022-08-24 0:45,2022-08-23 22:51,8.6,2.2,7.1,16.7,14,1.00E-02,1.40E-02,2.60E-02,
Stew Forster & Landon Kryger,stew675 & GuiltyBystander,C,0,1,1,1,1,0,1,1,0,"Extension of the algorithm of GuiltyBystander with several further tricks that are beyond my skill to review; according to Stew's info, they went down to machine code level for further optimizations and had to factor in things like caching and SSD loading speeds.",1152,https://github.com/stew675/standup5x5/,https://twitter.com/stew6752/status/1567221440721698819,2022-09-06 20:41,2022-09-06 20:34,0.5,0.9,0.2,11.5,1,1.00E-03,1.00E-03,2.00E-03,
Roy van Rijn,royvanrijn,Java,0,1,1,0,1,0,1,0,0,Recursive bitwise solution where the alphabet with explicit character skipping,154,https://gist.github.com/royvanrijn/c3dbcc6a8c5f2eea93c453af2ecca266,https://twitter.com/royvanrijn/status/1582369954879635456,2022-10-18 15:56,2022-10-18 15:50,165.1,6.7,157.2,180.3,174,1.74E-01,1.68E-01,1.96E-01,
Andreas Källberg,anka-213,Haskell,0,1,0,0,1,0,1,0,0,Functional programming implementation with bitwise representation,183,https://github.com/anka-213/five-five-letter-words-haskell,https://twitter.com/Anka213/status/1582492030889885696,2022-10-19 0:01,2022-10-19 6:51,64.6,6.3,57.5,84,58,5.30E-02,6.30E-02,5.80E-02,
Simon,sh1boot,Python,0,1,1,0,1,0,1,0,0,Compact python implementation with quite a few creative uses of python notation and concepts,60,https://github.com/sh1boot/fivewords,email,2022-10-21 7:45,2022-10-21 7:22,652.6,16.8,627.9,679.2,629,6.20E-01,6.29E-01,6.41E-01,
Thomas Reichert,trichie,Python,0,1,1,0,1,0,1,0,0,Extremely compact recursive python implementation with only 11 lines,11,https://github.com/trichie/matts_wordle,email,2022-10-21 18:14,2022-10-21 19:41,36894,2317,34670,40534,"35,339",3.61E+01,3.53E+01,3.48E+01,
Ose Predro,OsePedro,Haskell,0,1,0,0,1,0,1,0,0,Functional programming implementation with bitwise representation; partially inspired by anka-213,,https://github.com/OsePedro/FiveFiveLetterWords,https://twitter.com/rawmoose/status/1584036702758150144,2022-10-23 6:19,2022-10-23 17:57,312.3,4.8,304.2,318.6,302,2.99E-01,3.35E-01,3.02E-01,
Alex Gunning,agunning,Python,0,1,1,0,1,0,0,0,0,Python solution that uses concepts from taboo search and has separate functions for adding words to an existing set and tabooing words.,71,https://github.com/agunning/fiveletterclique,email,2022-10-23 6:30,2022-10-23 8:34,246.4,7.1,236.6,264,245,2.55E-01,2.43E-01,2.45E-01,